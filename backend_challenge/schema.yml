openapi: 3.0.3
info:
  title: Backend Challenge 20220626
  version: 1.0.0
  description: Este é um projeto em Python e Django que faz o scraping da página do
    Open Food Facts uma vez ao dia e importa os produtos para um banco de dados. O
    projeto também expõe uma REST API para consultar os produtos importados.
paths:
  /:
    get:
      operationId: root_retrieve
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /products/:
    get:
      operationId: products_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
  /products/{code}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: code
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
components:
  schemas:
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    Product:
      type: object
      properties:
        code:
          type: string
          maxLength: 20
        barcode:
          type: string
          maxLength: 50
        status:
          $ref: '#/components/schemas/StatusEnum'
        imported_t:
          type: string
          format: date-time
        url:
          type: string
          format: uri
          maxLength: 200
        product_name:
          type: string
          maxLength: 200
        quantity:
          type: string
          maxLength: 50
        categories:
          type: string
          maxLength: 200
        packaging:
          type: string
          maxLength: 200
        brands:
          type: string
          maxLength: 200
        image_url:
          type: string
          format: uri
          maxLength: 200
      required:
      - barcode
      - brands
      - categories
      - code
      - image_url
      - imported_t
      - packaging
      - product_name
      - quantity
      - status
      - url
    StatusEnum:
      enum:
      - draft
      - imported
      type: string
      description: |-
        * `draft` - Draft
        * `imported` - Imported
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
